export const validationMessagesI18n = {
    phone: () => 'validation.phone',
    email: () => 'validation.email',
    required: () => 'validation.required',
    lettersOnly: (whiteSpaces) => (whiteSpaces ? 'validation.lettersOnlyWithWhiteSpaces' : 'validation.lettersOnly'),
    allowedOnly: (value) => ({ key: value && value.length ? 'validation.allowedOnly.base' : 'validation.allowedOnly.nothing', vars: { value } }),
    sameAs: (value) => ({ key: 'validation.sameAs', vars: { value } }),
    notSameAs: (value) => ({ key: 'validation.notSameAs', vars: { value } }),
    boolean: {
        base: () => 'validation.boolean.base',
        expected: (value) => ({ key: 'validation.boolean.expected', vars: { value } })
    },
    finite: {
        base: () => 'validation.finite.base',
        min: (value) => ({ key: 'validation.finite.minLength', vars: { value } }),
        max: (value) => ({ key: 'validation.finite.maxLength', vars: { value } }),
        maxDigitsAfterDot: (value) => ({ key: 'validation.finite.maxDigitsAfterDot', vars: { value } })
    },
    number: {
        base: () => 'validation.number.base',
        min: (value) => ({ key: 'validation.number.minLength', vars: { value } }),
        max: (value) => ({ key: 'validation.number.maxLength', vars: { value } })
    },
    string: {
        base: () => 'validation.string.base',
        min: (value) => ({ key: 'validation.string.minLength', vars: { value } }),
        max: (value) => ({ key: 'validation.string.maxLength', vars: { value } })
    },
    array: {
        base: () => 'validation.array.base',
        min: (value) => ({ key: 'validation.array.minLength', vars: { value } }),
        max: (value) => ({ key: 'validation.array.maxLength', vars: { value } })
    },
    password: {
        length: (value) => ({ key: 'validation.password.length', vars: { value } }),
        specialChars: (value) => ({ key: 'validation.password.specialChars', vars: { value } }),
        lowerUpperCasePattern: () => ({ key: 'validation.password.lowerUpperCasePattern' }),
        numbers: (value) => ({ key: 'validation.password.numbers', vars: { value } })
    }
};
