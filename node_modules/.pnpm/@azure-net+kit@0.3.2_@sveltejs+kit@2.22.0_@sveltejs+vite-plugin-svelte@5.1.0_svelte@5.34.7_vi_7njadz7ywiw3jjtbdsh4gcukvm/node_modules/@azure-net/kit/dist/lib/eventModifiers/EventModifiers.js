export const preventDefault = (fn) => (event) => {
    event.preventDefault();
    fn(event);
};
export const stopPropagation = (fn) => (event) => {
    event.stopPropagation();
    fn(event);
};
export const stopImmediatePropagation = (fn) => (event) => {
    event.stopImmediatePropagation();
    fn(event);
};
export const once = (fn) => {
    let called = false;
    return (event) => {
        if (!called) {
            called = true;
            fn(event);
        }
    };
};
export const compose = (...wrappers) => (fn) => wrappers.reduce((acc, wrap) => wrap(acc), fn);
