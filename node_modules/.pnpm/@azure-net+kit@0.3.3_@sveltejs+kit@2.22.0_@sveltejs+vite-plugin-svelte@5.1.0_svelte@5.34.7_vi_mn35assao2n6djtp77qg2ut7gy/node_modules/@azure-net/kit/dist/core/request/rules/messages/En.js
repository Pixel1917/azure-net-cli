export const validationMessagesEn = {
    phone: () => 'Invalid phone number format',
    email: () => 'Invalid email address',
    required: () => 'This field is required',
    lettersOnly: (whiteSpaces) => `This field may contain letters only${whiteSpaces ? '' : ' and must not contain spaces'}`,
    allowedOnly: (value) => value && value.length ? `This field may contain only one of the following values: ${value}` : 'This field has no allowed values',
    sameAs: (value) => `This field must match the ${value} field`,
    notSameAs: (value) => `This field must not match the ${value} field`,
    boolean: {
        base: () => 'This field must be a boolean value',
        expected: (value) => `Expected value: ${value}`
    },
    finite: {
        base: () => 'This field must be a number',
        min: (value) => `The number must be at least ${value}`,
        max: (value) => `The number must be at most ${value}`,
        maxDigitsAfterDot: (value) => `Number of digits after the decimal point must not exceed ${value}`
    },
    number: {
        base: () => 'This field must be an integer',
        min: (value) => `The number must be at least ${value}`,
        max: (value) => `The number must be at most ${value}`
    },
    string: {
        base: () => 'This field must be a string',
        min: (value) => `Minimum string length is ${value}`,
        max: (value) => `Maximum string length is ${value}`
    },
    array: {
        base: () => 'This field must be an array',
        min: (value) => `Minimum array length is ${value}`,
        max: (value) => `Maximum array length is ${value}`
    },
    password: {
        length: (value) => `Minimum password length is ${value}`,
        specialChars: (value) => `Password must contain at least ${value} special character(s)`,
        lowerUpperCasePattern: () => 'Password must contain both uppercase and lowercase letters',
        numbers: (value) => `Password must contain at least ${value} number(s)`
    }
};
