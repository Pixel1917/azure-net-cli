export type EventHandler<E = Event> = (event: E) => void;
export declare const preventDefault: <E extends Event = Event>(fn: EventHandler<E>) => EventHandler<E>;
export declare const stopPropagation: <E extends Event = Event>(fn: EventHandler<E>) => EventHandler<E>;
export declare const stopImmediatePropagation: <E extends Event = Event>(fn: EventHandler<E>) => EventHandler<E>;
export declare const once: <E extends Event = Event>(fn: EventHandler<E>) => EventHandler<E>;
export declare const compose: <E extends Event = Event>(...wrappers: Array<(fn: EventHandler<E>) => EventHandler<E>>) => (fn: EventHandler<E>) => EventHandler<E>;
