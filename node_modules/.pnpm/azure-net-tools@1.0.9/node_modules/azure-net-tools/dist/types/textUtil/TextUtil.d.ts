/**
 * Utility class for common text operations such as pluralization, truncation, and more.
 */
export declare class TextUtil {
    /**
     * Returns the correct plural form from an array of word forms based on the given number.
     *
     * For languages like Russian, array should have 3 forms:
     *   - titles[0]: singular (1)
     *   - titles[1]: few (2,3,4)
     *   - titles[2]: many (0,5-20)
     *
     * For languages like English, array should have 2 forms:
     *   - titles[0]: singular (1)
     *   - titles[1]: plural (everything else)
     *
     * @param {number} num - The number to base the pluralization on.
     * @param {string[]} titles - Array of word forms (2 or 3 elements).
     * @returns {string} The correct plural form according to the number.
     * @throws {Error} Throws if titles array length is not 2 or 3.
     *
     * @example
     * PluralUtil.formatText(1, ['apple', 'apples']); // 'apple'
     * PluralUtil.formatText(2, ['apple', 'apples']); // 'apples'
     * PluralUtil.formatText(1, ['яблоко', 'яблока', 'яблок']); // 'яблоко'
     * PluralUtil.formatText(5, ['яблоко', 'яблока', 'яблок']); // 'яблок'
     */
    static pluralize(num: number, titles: string[]): string;
    /**
     * Truncates a string to a specified maximum length, adding ellipsis if truncated.
     *
     * @param text - The input string to truncate.
     * @param maxLength - Maximum allowed length of the string.
     * @param ellipsis - Optional ellipsis string to append (default: '...').
     * @returns Truncated string with ellipsis if needed.
     */
    static truncate(text: string, maxLength: number, ellipsis?: string): string;
    /**
     * Capitalizes the first character of the given string.
     *
     * @param text - The input string.
     * @returns The string with the first character capitalized.
     */
    static capitalize(text: string): string;
    /**
     * Converts the first character of the given string to lowercase.
     *
     * @param text - The input string.
     * @returns The string with the first character in lowercase.
     */
    static decapitalize(text: string): string;
    /**
     * Checks if a string is empty or consists only of whitespace characters.
     *
     * @param text - The input string.
     * @returns True if string is empty or whitespace only, false otherwise.
     */
    static isEmptyOrWhitespace(text: string): boolean;
}
